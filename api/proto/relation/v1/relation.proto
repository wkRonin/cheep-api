syntax = "proto3";

package relation.v1;
option go_package = "relation/v1;relationv1";


message FollowRelation {
  int64 id = 1;
  int64 follower = 2;
  int64 followee = 3;
}

service RelationService {
  // 增删
  rpc Follow (FollowRequest) returns (FollowResponse);
  rpc CancelFollow(CancelFollowRequest) returns (CancelFollowResponse);

  // 获得某个人的关注列表
  rpc GetFollowing (GetFollowingRequest) returns (GetFollowingResponse);
  // 获得粉丝列表
  rpc GetFans (GetFansRequest) returns (GetFansResponse);
  // 获得某个人关注另外一个人的详细信息
  rpc FollowInfo (FollowInfoRequest) returns (FollowInfoResponse);
  // 关注数与粉丝数
  rpc FollowStatics (FollowStaticsRequest) returns (FollowStaticsResponse);
}

message GetFollowingRequest {
  // 查看某人的关注列表
  int64 follower = 1;
  int64 offset = 2;
  int64 limit = 3;
}

message GetFollowingResponse {
  repeated FollowRelation follow_relations = 1;
}

message GetFansRequest {
  // 获取粉丝列表，被关注者为自己
  int64 followee = 1;
  int64 offset = 2;
  int64 limit = 3;
}

message GetFansResponse {
  repeated FollowRelation follow_relations = 1;
}

message FollowInfoRequest {
  // 关注者
  int64 follower = 1;
  // 被关注者
  int64 followee = 2;
}

message FollowInfoResponse {
  FollowRelation follow_relation = 1;
}

message FollowRequest {
  int64 follower = 1;
  int64 followee = 2;
}

message FollowResponse {
}

message CancelFollowRequest {
  int64 follower = 1;
  int64 followee = 2;
}

message CancelFollowResponse {
}

message FollowStaticsRequest {
  int64 uid = 1;
}

message FollowStaticsResponse {
  // 某人关注的人数
  int64 following = 1;
  // 某人的关注者数（粉丝数）
  int64 follower = 2;
}